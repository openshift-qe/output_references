apiVersion: v1
items:
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: namespace-cpu-request
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34326"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/namespace-cpu-request
    uid: 873fb2f3-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        namespace,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_request_cpu_core_seconds) as pod_request_cpu_core_seconds
      FROM {| generationQueryViewName "pod-cpu-request-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace
      ORDER BY pod_request_cpu_core_seconds DESC
    reportQueries:
    - pod-cpu-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: namespace-cpu-usage
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34329"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/namespace-cpu-usage
    uid: 87414c74-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_usage_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        namespace,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_usage_cpu_core_seconds) as pod_usage_cpu_core_seconds
      FROM {| generationQueryViewName "pod-cpu-usage-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace
      ORDER BY pod_usage_cpu_core_seconds DESC
    reportQueries:
    - pod-cpu-usage-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: namespace-memory-request
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34335"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/namespace-memory-request
    uid: 874e2169-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_memory_byte_seconds
      type: double
      unit: byte_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        namespace,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_request_memory_byte_seconds) as pod_request_memory_byte_seconds
      FROM {| generationQueryViewName "pod-memory-request-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace
      ORDER BY pod_request_memory_byte_seconds DESC
    reportQueries:
    - pod-memory-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: namespace-memory-usage
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34338"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/namespace-memory-usage
    uid: 874edae4-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_usage_memory_byte_seconds
      type: double
      unit: byte_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        namespace,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_usage_memory_byte_seconds) as pod_usage_memory_byte_seconds
      FROM {| generationQueryViewName "pod-memory-usage-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace
      ORDER BY pod_usage_memory_byte_seconds DESC
    reportQueries:
    - pod-memory-usage-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:47Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-cpu-allocatable
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34948"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-cpu-allocatable
    uid: 87343e35-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: node_allocatable_cpu_cores
      tableHidden: false
      type: double
      unit: cpu_cores
    - name: resource_id
      tableHidden: false
      type: string
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: node_allocatable_cpu_core_seconds
      tableHidden: false
      type: double
      unit: cpu_core_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['node'] as node,
          labels,
          amount as node_allocatable_cpu_cores,
          split_part(split_part(element_at(labels, 'provider_id'), ':///', 2), '/', 2) as resource_id,
          timeprecision,
          amount * timeprecision as node_allocatable_cpu_core_seconds,
          "timestamp"
      FROM {| dataSourceTableName "node-allocatable-cpu-cores" |}
    reportDataSources:
    - node-allocatable-cpu-cores
    view:
      disabled: false
  viewName: view_node_cpu_allocatable
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:47Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-cpu-capacity
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34959"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-cpu-capacity
    uid: 8731e58b-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: node_capacity_cpu_cores
      tableHidden: false
      type: double
      unit: cpu_cores
    - name: resource_id
      tableHidden: false
      type: string
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: node_capacity_cpu_core_seconds
      tableHidden: false
      type: double
      unit: cpu_core_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['node'] as node,
          labels,
          amount as node_capacity_cpu_cores,
          split_part(split_part(element_at(labels, 'provider_id'), ':///', 2), '/', 2) as resource_id,
          timeprecision,
          amount * timeprecision as node_capacity_cpu_core_seconds,
          "timestamp"
      FROM {| dataSourceTableName "node-capacity-cpu-cores" |}
    reportDataSources:
    - node-capacity-cpu-cores
    view:
      disabled: false
  viewName: view_node_cpu_capacity
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:47Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-cpu-utilization
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34314"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-cpu-utilization
    uid: 8732ab58-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: node_allocatable_data_start
      type: timestamp
      unit: date
    - name: node_allocatable_data_end
      type: timestamp
      unit: date
    - name: node_allocatable_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    - name: pod_usage_data_start
      type: timestamp
      unit: date
    - name: pod_usage_data_end
      type: timestamp
      unit: date
    - name: pod_request_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    - name: cpu_used_percent
      type: double
    - name: cpu_unused_percent
      type: double
    query: |
      WITH node_cpu_allocatable AS (
        SELECT min("timestamp") as node_allocatable_data_start,
          max("timestamp") as node_allocatable_data_end,
          sum(node_allocatable_cpu_core_seconds) as node_allocatable_cpu_core_seconds
        FROM {| generationQueryViewName "node-cpu-allocatable" |}
          WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      ), pod_cpu_consumption AS (
        SELECT min("timestamp") as pod_usage_data_start,
          max("timestamp") as pod_usage_data_end,
          sum(pod_request_cpu_core_seconds) as pod_request_cpu_core_seconds
        FROM {| generationQueryViewName "pod-cpu-request-raw" |}
        WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      )
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        node_cpu_allocatable.*,
        pod_cpu_consumption.*,
        pod_cpu_consumption.pod_request_cpu_core_seconds / node_cpu_allocatable.node_allocatable_cpu_core_seconds,
        1 - (pod_cpu_consumption.pod_request_cpu_core_seconds / node_cpu_allocatable.node_allocatable_cpu_core_seconds)
      FROM node_cpu_allocatable
      CROSS JOIN pod_cpu_consumption
    reportQueries:
    - node-cpu-allocatable
    - pod-cpu-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:47Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-memory-allocatable
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34947"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-memory-allocatable
    uid: 87369f49-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: node_allocatable_memory_bytes
      tableHidden: false
      type: double
      unit: bytes
    - name: resource_id
      tableHidden: true
      type: string
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: node_allocatable_memory_byte_seconds
      tableHidden: false
      type: double
      unit: byte_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['node'] as node,
          labels,
          amount as node_allocatable_memory_bytes,
          split_part(split_part(element_at(labels, 'provider_id'), ':///', 2), '/', 2) as resource_id,
          timeprecision,
          amount * timeprecision as node_allocatable_memory_byte_seconds,
          "timestamp"
      FROM {| dataSourceTableName "node-allocatable-memory-bytes" |}
    reportDataSources:
    - node-allocatable-memory-bytes
    view:
      disabled: false
  viewName: view_node_memory_allocatable
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:47Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-memory-capacity
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34956"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-memory-capacity
    uid: 87356c29-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: node_capacity_memory_bytes
      tableHidden: false
      type: double
      unit: byte_seconds
    - name: resource_id
      tableHidden: true
      type: string
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: node_capacity_memory_byte_seconds
      tableHidden: false
      type: double
      unit: byte_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['node'] as node,
          labels,
          amount as node_capacity_memory_bytes,
          split_part(split_part(element_at(labels, 'provider_id'), ':///', 2), '/', 2) as resource_id,
          timeprecision,
          amount * timeprecision as node_capacity_memory_byte_seconds,
          "timestamp"
      FROM {| dataSourceTableName "node-capacity-memory-bytes" |}
    reportDataSources:
    - node-capacity-memory-bytes
    view:
      disabled: false
  viewName: view_node_memory_capacity
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: node-memory-utilization
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34323"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/node-memory-utilization
    uid: 873c7131-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: node_allocatable_data_start
      type: timestamp
      unit: date
    - name: node_allocatable_data_end
      type: timestamp
      unit: date
    - name: node_allocatable_memory_byte_seconds
      type: double
      unit: byte_seconds
    - name: pod_usage_data_start
      type: timestamp
      unit: date
    - name: pod_usage_data_end
      type: timestamp
      unit: date
    - name: pod_request_memory_byte_seconds
      type: double
      unit: byte_seconds
    - name: memory_used_percent
      type: double
    - name: memory_unused_percent
      type: double
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      WITH node_memory_allocatable AS (
        SELECT min("timestamp") as node_allocatable_data_start,
          max("timestamp") as node_allocatable_data_end,
          sum(node_allocatable_memory_byte_seconds) as node_allocatable_memory_byte_seconds
        FROM {| generationQueryViewName "node-memory-allocatable" |}
          WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      ), pod_memory_consumption AS (
        SELECT min("timestamp") as pod_usage_data_start,
          max("timestamp") as pod_usage_data_end,
          sum(pod_request_memory_byte_seconds) as pod_request_memory_byte_seconds
        FROM {| generationQueryViewName "pod-memory-request-raw" |}
        WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      )
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        node_memory_allocatable.*,
        pod_memory_consumption.*,
        pod_memory_consumption.pod_request_memory_byte_seconds / node_memory_allocatable.node_allocatable_memory_byte_seconds,
        1 - (pod_memory_consumption.pod_request_memory_byte_seconds / node_memory_allocatable.node_allocatable_memory_byte_seconds)
      FROM node_memory_allocatable
      CROSS JOIN pod_memory_consumption
    reportQueries:
    - node-memory-allocatable
    - pod-memory-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-cpu-request
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34327"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-cpu-request
    uid: 87404648-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod,
        namespace,
        node,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_request_cpu_core_seconds) as pod_request_cpu_core_seconds
      FROM {| generationQueryViewName "pod-cpu-request-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace, pod, node
      ORDER BY namespace, pod, node ASC, pod_request_cpu_core_seconds DESC
    reportQueries:
    - pod-cpu-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-cpu-request-raw
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34978"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-cpu-request-raw
    uid: 8741de0a-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: pod
      tableHidden: false
      type: string
      unit: kubernetes_pod
    - name: namespace
      tableHidden: false
      type: string
      unit: kubernetes_namespace
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: pod_request_cpu_cores
      tableHidden: false
      type: double
      unit: cpu_cores
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: pod_request_cpu_core_seconds
      tableHidden: false
      type: double
      unit: cpu_core_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['pod'] as pod,
          labels['namespace'] as namespace,
          element_at(labels, 'node') as node,
          labels,
          amount as pod_request_cpu_cores,
          timeprecision,
          amount * timeprecision as pod_request_cpu_core_seconds,
          "timestamp"
      FROM {| dataSourceTableName "pod-request-cpu-cores" |}
      WHERE element_at(labels, 'node') IS NOT NULL
    reportDataSources:
    - pod-request-cpu-cores
    view:
      disabled: false
  viewName: view_pod_cpu_request_raw
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-cpu-request-vs-node-cpu-allocatable
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34328"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-cpu-request-vs-node-cpu-allocatable
    uid: 8740cf46-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    - name: pod_cpu_usage_percent
      type: double
    query: |
      WITH node_cpu_allocatable AS (
        SELECT min("timestamp") as node_allocatable_data_start,
          max("timestamp") as node_allocatable_data_end,
          sum(node_allocatable_cpu_core_seconds) as node_allocatable_cpu_core_seconds
        FROM {| generationQueryViewName "node-cpu-allocatable" |}
          WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      ), pod_cpu_consumption AS (
        SELECT pod,
                namespace,
                node,
                min("timestamp") as data_start,
                max("timestamp") as data_end,
                sum(pod_request_cpu_core_seconds) as pod_request_cpu_core_seconds
        FROM {| generationQueryViewName "pod-cpu-request-raw" |}
        WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        GROUP BY pod, namespace, node
      )
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod_cpu_consumption.*,
        pod_cpu_consumption.pod_request_cpu_core_seconds / node_cpu_allocatable.node_allocatable_cpu_core_seconds as pod_cpu_usage_percent
      FROM pod_cpu_consumption
      CROSS JOIN node_cpu_allocatable
      ORDER BY pod_cpu_consumption.pod_request_cpu_core_seconds DESC
    reportQueries:
    - pod-cpu-request-raw
    - node-cpu-allocatable
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-cpu-usage
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34324"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-cpu-usage
    uid: 873e6fd3-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_usage_cpu_core_seconds
      type: double
      unit: cpu_core_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod,
        namespace,
        node,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_usage_cpu_core_seconds) as pod_usage_cpu_core_seconds
      FROM {| generationQueryViewName "pod-cpu-usage-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace, pod, node
      ORDER BY namespace, pod, node ASC, pod_usage_cpu_core_seconds DESC
    reportQueries:
    - pod-cpu-usage-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-cpu-usage-raw
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34967"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-cpu-usage-raw
    uid: 873f1b99-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: pod
      tableHidden: false
      type: string
      unit: kubernetes_pod
    - name: namespace
      tableHidden: false
      type: string
      unit: kubernetes_namespace
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: pod_usage_cpu_cores
      tableHidden: false
      type: double
      unit: cpu_cores
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: pod_usage_cpu_core_seconds
      tableHidden: false
      type: double
      unit: cpu_core_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['pod'] as pod,
          labels['namespace'] as namespace,
          element_at(labels, 'node') as node,
          labels,
          amount as pod_usage_cpu_cores,
          timeprecision,
          amount * timeprecision as pod_usage_cpu_core_seconds,
          "timestamp"
      FROM {| dataSourceTableName "pod-usage-cpu-cores" |}
      WHERE element_at(labels, 'node') IS NOT NULL
    reportDataSources:
    - pod-usage-cpu-cores
    view:
      disabled: false
  viewName: view_pod_cpu_usage_raw
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-memory-request
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34332"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-memory-request
    uid: 874ba506-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_memory_byte_seconds
      type: double
      unit: byte_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod,
        namespace,
        node,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_request_memory_byte_seconds) as pod_request_memory_byte_seconds
      FROM {| generationQueryViewName "pod-memory-request-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace, pod, node
      ORDER BY namespace, pod, node ASC, pod_request_memory_byte_seconds DESC
    reportQueries:
    - pod-memory-request-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-memory-request-raw
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34969"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-memory-request-raw
    uid: 87427fac-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: pod
      tableHidden: false
      type: string
      unit: kubernetes_pod
    - name: namespace
      tableHidden: false
      type: string
      unit: kubernetes_namespace
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: pod_request_memory_bytes
      tableHidden: false
      type: double
      unit: bytes
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: pod_request_memory_byte_seconds
      tableHidden: false
      type: double
      unit: byte_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['pod'] as pod,
          labels['namespace'] as namespace,
          element_at(labels, 'node') as node,
          labels,
          amount as pod_request_memory_bytes,
          timeprecision,
          amount * timeprecision as pod_request_memory_byte_seconds,
          "timestamp"
      FROM {| dataSourceTableName "pod-request-memory-bytes" |}
      WHERE element_at(labels, 'node') IS NOT NULL
    reportDataSources:
    - pod-request-memory-bytes
    view:
      disabled: false
  viewName: view_pod_memory_request_raw
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-memory-request-vs-node-memory-allocatable
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34339"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-memory-request-vs-node-memory-allocatable
    uid: 874fb314-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_request_memory_byte_seconds
      type: double
      unit: byte_seconds
    - name: pod_memory_usage_percent
      type: double
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      WITH node_memory_allocatable AS (
        SELECT min("timestamp") as node_allocatable_data_start,
          max("timestamp") as node_allocatable_data_end,
          sum(node_allocatable_memory_byte_seconds) as node_allocatable_memory_byte_seconds
        FROM {| generationQueryViewName "node-memory-allocatable" |}
          WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      ), pod_memory_consumption AS (
        SELECT pod,
                namespace,
                node,
                min("timestamp") as data_start,
                max("timestamp") as data_end,
                sum(pod_request_memory_byte_seconds) as pod_request_memory_byte_seconds
        FROM {| generationQueryViewName "pod-memory-request-raw" |}
        WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
        AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
        GROUP BY pod, namespace, node
      )
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod_memory_consumption.*,
        pod_memory_consumption.pod_request_memory_byte_seconds / node_memory_allocatable.node_allocatable_memory_byte_seconds as pod_memory_usage_percent
      FROM pod_memory_consumption
      CROSS JOIN node_memory_allocatable
      ORDER BY pod_memory_consumption.pod_request_memory_byte_seconds DESC
    reportQueries:
    - pod-memory-request-raw
    - node-memory-allocatable
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-memory-usage
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34333"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-memory-usage
    uid: 874cd34a-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: period_start
      type: timestamp
      unit: date
    - name: period_end
      type: timestamp
      unit: date
    - name: pod
      type: string
      unit: kubernetes_pod
    - name: namespace
      type: string
      unit: kubernetes_namespace
    - name: node
      type: string
      unit: kubernetes_node
    - name: data_start
      type: timestamp
      unit: date
    - name: data_end
      type: timestamp
      unit: date
    - name: pod_usage_memory_byte_seconds
      type: double
      unit: byte_seconds
    inputs:
    - name: ReportingStart
    - name: ReportingEnd
    query: |
      SELECT
        timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
        timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
        pod,
        namespace,
        node,
        min("timestamp") as data_start,
        max("timestamp") as data_end,
        sum(pod_usage_memory_byte_seconds) as pod_usage_memory_byte_seconds
      FROM {| generationQueryViewName "pod-memory-usage-raw" |}
      WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
      AND "timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
      GROUP BY namespace, pod, node
      ORDER BY namespace, pod, node ASC, pod_usage_memory_byte_seconds DESC
    reportQueries:
    - pod-memory-usage-raw
    view:
      disabled: true
- apiVersion: metering.openshift.io/v1alpha1
  kind: ReportGenerationQuery
  metadata:
    creationTimestamp: 2018-09-27T00:01:48Z
    generation: 1
    labels:
      operator-metering: "true"
    name: pod-memory-usage-raw
    namespace: openshift-metering
    ownerReferences:
    - apiVersion: metering.openshift.io/v1alpha1
      blockOwnerDeletion: false
      controller: true
      kind: Metering
      name: openshift-metering
      uid: 4f0bca4f-c1e8-11e8-aa1e-fa163ecc7747
    resourceVersion: "34975"
    selfLink: /apis/metering.openshift.io/v1alpha1/namespaces/openshift-metering/reportgenerationqueries/pod-memory-usage-raw
    uid: 87505810-c1e8-11e8-aa1e-fa163ecc7747
  spec:
    columns:
    - name: pod
      tableHidden: false
      type: string
      unit: kubernetes_pod
    - name: namespace
      tableHidden: false
      type: string
      unit: kubernetes_namespace
    - name: node
      tableHidden: false
      type: string
      unit: kubernetes_node
    - name: labels
      tableHidden: true
      type: map<string, string>
    - name: pod_usage_memory_bytes
      tableHidden: false
      type: double
      unit: bytes
    - name: timeprecision
      tableHidden: false
      type: double
      unit: seconds
    - name: pod_usage_memory_byte_seconds
      tableHidden: false
      type: double
      unit: byte_seconds
    - name: timestamp
      tableHidden: false
      type: timestamp
      unit: date
    query: |
      SELECT labels['pod'] as pod,
          labels['namespace'] as namespace,
          element_at(labels, 'node') as node,
          labels,
          amount as pod_usage_memory_bytes,
          timeprecision,
          amount * timeprecision as pod_usage_memory_byte_seconds,
          "timestamp"
      FROM {| dataSourceTableName "pod-usage-memory-bytes" |}
      WHERE element_at(labels, 'node') IS NOT NULL
    reportDataSources:
    - pod-usage-memory-bytes
    view:
      disabled: false
  viewName: view_pod_memory_usage_raw
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
